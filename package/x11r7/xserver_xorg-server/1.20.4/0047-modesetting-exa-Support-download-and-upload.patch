From d6f9c0546c95bec65af791a5750f9ccc484d04fb Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Tue, 27 Aug 2019 15:01:56 +0800
Subject: [PATCH 47/47] modesetting: exa: Support download and upload

The buffers in download/upload are aligned to the offset point, which
means trying to access the whole area(pitch * h) will overflow.

Handle the last line separately to prevent it.

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 hw/xfree86/drivers/modesetting/exa.c | 104 ++++++++++++++++++++++++++---------
 1 file changed, 77 insertions(+), 27 deletions(-)

diff --git a/hw/xfree86/drivers/modesetting/exa.c b/hw/xfree86/drivers/modesetting/exa.c
index 76ea46109..7dc99563f 100644
--- a/hw/xfree86/drivers/modesetting/exa.c
+++ b/hw/xfree86/drivers/modesetting/exa.c
@@ -592,9 +592,9 @@ ms_upload_to_screen(PixmapPtr pDst, int x, int y, int w, int h,
 #ifndef MODESETTING_WITH_RGA
     return FALSE;
 #else
-    rga_info_t src_info = {0};
-    rga_info_t dst_info = {0};
-    int bpp = pDst->drawable.bitsPerPixel;
+    ScreenPtr screen = pDst->drawable.pScreen;
+    PixmapPtr pixmap;
+    Bool ret = FALSE;
 
     /* rga requires image width/height larger than 2 */
     if (w <= 2 || h <= 2)
@@ -607,17 +607,42 @@ ms_upload_to_screen(PixmapPtr pDst, int x, int y, int w, int h,
     if (!rga_check_pixmap(pDst))
         return FALSE;
 
-    rga_prepare_info(pDst, &dst_info, x, y, w, h);
-
-    src_info.fd = -1;
-    src_info.mmuFlag = 1;
-    src_info.virAddr = src;
-
-    rga_set_rect(&src_info.rect, 0, 0, w, h,
-                 src_pitch * 8 / bpp, h,
-                 rga_get_pixmap_format(pDst));
-
-    return !c_RkRgaBlit(&src_info, &dst_info, NULL);
+    /* copy the h-1 lines */
+    h -= 1;
+    pixmap = drmmode_create_pixmap_header(screen, w, h,
+                                          pDst->drawable.depth,
+                                          pDst->drawable.bitsPerPixel,
+                                          src_pitch, NULL);
+    if (!pixmap)
+        goto out;
+
+    pixmap->devKind = src_pitch;
+    pixmap->devPrivate.ptr = src;
+    exa_prepare_args.copy.pSrcPixmap = pixmap;
+    ms_copy(pDst, 0, 0, x, y, w, h);
+
+    screen->DestroyPixmap(pixmap);
+
+    /* copy the last line separately */
+    pixmap = drmmode_create_pixmap_header(screen, w, 1,
+                                          pDst->drawable.depth,
+                                          pDst->drawable.bitsPerPixel,
+                                          src_pitch, NULL);
+    if (!pixmap)
+        goto out;
+
+    pixmap->devKind = w * pDst->drawable.bitsPerPixel / 8;
+    pixmap->devPrivate.ptr = src + src_pitch * h;
+    exa_prepare_args.copy.pSrcPixmap = pixmap;
+    ms_copy(pDst, 0, 0, x, y + h, w, 1);
+
+    ret = TRUE;
+
+out:
+    if (pixmap)
+        screen->DestroyPixmap(pixmap);
+
+    return ret;
 #endif
 }
 
@@ -628,9 +653,9 @@ ms_download_from_screen(PixmapPtr pSrc, int x, int y, int w, int h,
 #ifndef MODESETTING_WITH_RGA
     return FALSE;
 #else
-    rga_info_t src_info = {0};
-    rga_info_t dst_info = {0};
-    int bpp = pSrc->drawable.bitsPerPixel;
+    ScreenPtr screen = pSrc->drawable.pScreen;
+    PixmapPtr pixmap;
+    Bool ret = FALSE;
 
     /* rga requires image width/height larger than 2 */
     if (w <= 2 || h <= 2)
@@ -643,17 +668,42 @@ ms_download_from_screen(PixmapPtr pSrc, int x, int y, int w, int h,
     if (!rga_check_pixmap(pSrc))
         return FALSE;
 
-    rga_prepare_info(pSrc, &src_info, x, y, w, h);
+    exa_prepare_args.copy.pSrcPixmap = pSrc;
+
+    /* copy the h-1 lines */
+    h -= 1;
+    pixmap = drmmode_create_pixmap_header(screen, w, h,
+                                          pSrc->drawable.depth,
+                                          pSrc->drawable.bitsPerPixel,
+                                          dst_pitch, NULL);
+    if (!pixmap)
+        goto out;
+
+    pixmap->devKind = dst_pitch;
+    pixmap->devPrivate.ptr = dst;
+    ms_copy(pixmap, 0, 0, x, y, w, h);
+
+    screen->DestroyPixmap(pixmap);
+
+    /* copy the last line separately */
+    pixmap = drmmode_create_pixmap_header(screen, w, 1,
+                                          pSrc->drawable.depth,
+                                          pSrc->drawable.bitsPerPixel,
+                                          dst_pitch, NULL);
+    if (!pixmap)
+        goto out;
+
+    pixmap->devKind = w * pSrc->drawable.bitsPerPixel / 8;
+    pixmap->devPrivate.ptr = dst + dst_pitch * h;
+    ms_copy(pixmap, 0, 0, x, y + h, w, 1);
 
-    dst_info.fd = -1;
-    dst_info.mmuFlag = 1;
-    dst_info.virAddr = dst;
+    ret = TRUE;
 
-    rga_set_rect(&dst_info.rect, 0, 0, w, h,
-                 dst_pitch * 8 / bpp, h,
-                 rga_get_pixmap_format(pSrc));
+out:
+    if (pixmap)
+        screen->DestroyPixmap(pixmap);
 
-    return !c_RkRgaBlit(&src_info, &dst_info, NULL);
+    return ret;
 #endif
 }
 
@@ -766,8 +816,8 @@ ms_setup_exa(ScrnInfoPtr scrn, ExaDriverPtr exa)
     exa->DoneComposite = ms_exa_done;
 
     /* Disable upload/download, until rga2 crash issue fixed */
-//    exa->UploadToScreen = ms_upload_to_screen;
-//    exa->DownloadFromScreen = ms_download_from_screen;
+    exa->UploadToScreen = ms_upload_to_screen;
+    exa->DownloadFromScreen = ms_download_from_screen;
 
     exa->WaitMarker = ms_wait_marker;
     exa->MarkSync = ms_mark_sync;
-- 
2.11.0

